class BMasher {

    field int counter;
    field int hs;
    field Array instr;

    constructor BMasher new() {
        let instr = Array.new(5);
        let instr[0] = "BUTTON MASHER!!!";
        let instr[1] = "Button mash and get the highest score!";
        let instr[2] = "Press 'space' to button mash, 'n' to start over, 'q' to quit";
        let instr[3] = "Current score: ";
        let instr[4] = "High score: ";
        do clear();
        
        return this;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }
    
    method void upScore(int current, int high) {
        do clear();
        do Output.moveCursor(10, 30);
        do Output.printString(instr[3]);
        do Output.printInt(current);
        do Output.moveCursor(12, 30);
        do Output.printString(instr[4]);
        do Output.printInt(high);
        
        return;
    }
    
    method void clear() {
        do Screen.clearScreen();
        do Output.moveCursor(1, 1);
        do Output.printString(instr[0]);
        do Output.moveCursor(3, 1);
        do Output.printString(instr[1]);
        do Output.moveCursor(5, 1);
        do Output.printString(instr[2]);
        
        return;
    }
    
    method void run() {
        var char key;
        var boolean exit;
        let exit = false;
        let counter = 0;
        let hs = 0;

        while (~exit) {
            while (key = 0) {
                let key = Keyboard.keyPressed();
            }
            
            // 'q' key
            if (key = 81) {
                let exit = true;
            }
            // 'n' key
            if (key = 78) {
                let counter = 0;
                do upScore(counter, hs);
            }
            // 'space' key
            if (key = 32) {
                let counter = counter + 1;
                if (hs < counter) {
                    let hs = counter;
                }
                do upScore(counter, hs);
            }

            while (~(key = 0)) {
                let key = Keyboard.keyPressed();
            }
        }
        return;
    }
}
